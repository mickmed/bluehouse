{"version":3,"sources":["Components/services/apiConfig.js","Components/Header.jsx","Components/services/items.js","Components/Home.jsx","Components/Layout.jsx","App.js","index.js"],"names":["apiUrl","Header","apiUrls","process","window","location","hostname","api","Axios","create","baseURL","headers","getCategories","a","console","log","get","resp","getItems","offset","getItemsWithOffset","getItemById","id","data","createItem","item","post","updateItem","put","records","deleteItem","delete","Home","useState","setItem","categories","setCategories","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","selected","setSelected","sortKey","setSortKey","sortDir","setSortDir","setOffset","filteredItems","setFilteredItems","attTotals","setAttTotals","useEffect","getAllCategories","then","res","status","catch","error","getAllItems","length","handleChange","e","key","value","newItem","target","type","fields","checked","push","index","indexOf","splice","name","handleUpdate","i","current","handleSubmit","preventDefault","amount","vendor","date","purchaser","parseFloat","updatedItem","newItems","map","el","postedItem","alphaSort","array","sortParam","sort","b","paramA","paramB","Date","parse","Object","keys","includes","sortObject","obj","att","sortedObj","reduce","result","sortable","objSorted","forEach","sortByHeader","filterResults","filterItems","filter","filterNames","totalAtt","Set","g","f","cats","total","lyssieTotal","marcaTotal","className","style","background","onSubmit","for","onChange","step","onClick","parseInt","toFixed","getTime","getTimezoneOffset","evt","toLocaleDateString","handleDelete","Layout","props","children","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b41f6b4.chunk.js","sourcesContent":["import Axios from 'axios'\n\n// Grab the JSON Web Token (JWT) from localStorage and set to a variable so we can send the token in the HTTP Header\n\nlet apiUrl\n\nconst apiUrls = {\n  production: 'https://sei-items-api.herokuapp.com/api',\n  development: process.env.REACT_APP_AIRTABLE_BASE_URL\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nconst api = Axios.create({\n  baseURL: apiUrl,\n  headers: {\n    // 'Access-Control-Allow-Origin': '*',\n    'Authorization': `Bearer ${process.env.REACT_APP_BEARER_KEY}`\n  }\n})\nexport default api\n","const Header = () => {\n    return(\n        <header>\n            Blue House\n        </header>\n    )\n\n}\n\nexport default Header","import api from './apiConfig'\n\n\nexport const getCategories = async () => {\n  console.log(process.env.REACT_APP_AIRTABLE_BASE_URL)\n  try {\n    const resp = await api.get(`/Categories`);\n    return resp;\n  }\n  catch (error) {\n    throw error;\n  }\n}\n\n\n\nexport const getItems = async (offset) => {\n  try {\n    // const resp = await api.get('/items')\n    const resp = await api.get(`/Expense?view=Grid%20view`);\n    return resp\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const getItemsWithOffset = async (offset) => {\n  try {\n    // const resp = await api.get('/items')\n    const resp = await api.get(`/Expense?offset=${offset}`);\n    return resp\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const getItemById = async id => {\n  console.log(id)\n  try {\n    const resp = await api.get(`/Expense/${id}`);\n    // const resp = await api.get(`/items/${id}`)\n    return resp.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const createItem = async item => {\n  console.log(item)\n\n  try {\n    const resp = await api.post(`/Expense`,\n      {\n        \"records\": [\n          {\n            \"fields\": item\n          }\n        ]\n      }\n    )\n    return resp.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateItem = async (item, id) => {\n  try {\n    const resp = await api.put(`/Expense`,\n      {\n        \"records\": [\n          {\n            \"id\": id,\n            \"fields\": item\n          }\n        ]\n      })\n\n\n    return resp.data.records\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const deleteItem = async id => {\n  console.log(id)\n  try {\n    const resp = await api.delete(`/Expense?&records[]=${id} `)\n    return resp.data\n  } catch (error) {\n    throw error\n  }\n}\n","\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getItemsWithOffset, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n    const [selected, setSelected] = useState()\n    const [sortKey, setSortKey] = useState('')\n    const [sortDir, setSortDir] = useState(true)\n    const [offset, setOffset] = useState(' ')\n    const [filteredItems, setFilteredItems] = useState([])\n    const [attTotals, setAttTotals] = useState({})\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories()\n    }, []);\n\n    useEffect(() => {\n\n        getAllItems()\n    }, [])\n\n    useEffect(() => {\n        const getAllItems = async () => {\n\n            if (items.length % 100 === 0) {\n                let resp = await getItemsWithOffset(offset)\n                setItems([...items, ...resp.data.records])\n\n                if (resp.data.records.length === 100) {\n                    setOffset(resp.data.offset)\n                }\n            }\n        }\n        getAllItems()\n    }, [offset])\n\n    const getAllItems = async () => {\n        let resp = await getItems()\n        if (resp.data.records.length === 100) {\n            setItems(resp.data.records)\n            setOffset(resp.data.offset)\n            setFilteredItems([])\n            setAttTotals({})\n        }\n    }\n\n    const handleChange = (e) => {\n        let key, value, newItem\n        if (e.target.type === 'checkbox') {\n            newItem = { ...currentItem }\n            if (editMode) {\n\n                if ('categories' in newItem.fields) {\n                    if (e.target.checked) {\n                        newItem.fields.categories.push(e.target.id)\n                    } else {\n                        console.log('false')\n                        const index = newItem.fields.categories.indexOf(e.target.id)\n                        newItem.fields.categories.splice(index, 1)\n                    }\n                } else {\n                    newItem.fields.categories = [e.target.id]\n                }\n            } else {\n                newItem = { ...item }\n                console.log('not edit')\n                if ('categories' in newItem) {\n                    console.log('remove nw')\n                    e.target.checked ? newItem.categories.push(e.target.id) :\n                        newItem.categories.splice(newItem.categories.indexOf(e.target.id), 1)\n\n                } else {\n                    console.log('new')\n                    newItem.categories = [e.target.id]\n                }\n\n                console.log(newItem)\n            }\n\n            editMode ?\n                setCurrentItem(newItem) :\n                setItem(newItem)\n\n        } else {\n            key = e.target.name\n            value = e.target.value\n\n            editMode ?\n                setCurrentItem({ ...currentItem, fields: { ...currentItem.fields, [key]: value } }) :\n                setItem({ ...item, [key]: value })\n        }\n    }\n\n    const handleUpdate = async (e, id, i) => {\n        const current = await getItemById(id)\n        setCurrentItem(current)\n        setSelected(i)\n        setEditMode(true)\n    }\n\n    const handleSubmit = async (e, id) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem.fields : item\n        const newItem = {\n            name: name,\n            amount: parseFloat(amount),\n            vendor: vendor,\n            categories: categories,\n            date: date,\n            purchaser: purchaser\n        }\n        if (editMode) {\n            const updatedItem = await updateItem(newItem, id)\n            const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)]\n            setItems(newItems)\n            setEditMode(false)\n            setItem({})\n            setSelected()\n        } else {\n            const postedItem = await createItem(newItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n    }\n\n    const handleDelete = (e, id) => {\n        e.preventDefault()\n        deleteItem(id)\n        let filteredItems = [...items].filter(el => el.id !== id)\n        setItems(filteredItems)\n    }\n    const alphaSort = (array, sortParam) => {\n        const compare = (a, b) => {\n            let paramA\n            let paramB\n            if (sortParam === 'date') {\n                paramA = Date.parse(a.fields[sortParam])\n                paramB = Date.parse(b.fields[sortParam])\n\n            } else {\n\n                paramA = a.fields[sortParam]\n                paramB = b.fields[sortParam]\n            }\n            if (sortDir) {\n\n                if (paramA < paramB) {\n                    return -1;\n                }\n                if (paramA > paramB) {\n                    return 1;\n                }\n            } else if (Object.keys(array[0].fields).includes('vendor')) {\n\n                if (paramA > paramB) {\n                    return -1;\n                }\n                if (paramA < paramB) {\n                    return 1;\n                }\n\n            }\n            return 0;\n\n        }\n        array.sort(compare)\n        return array\n\n    }\n\n    const sortObject = (obj, att) => {\n        if (att !== 'amount') {\n            let sortedObj = Object.keys(obj).sort().reduce(function (result, key) {\n                result[key] = obj[key];\n                return result;\n            }, {});\n            setAttTotals(sortedObj)\n\n        } else {\n            let sortable = [];\n            for (let amount in obj) {\n                sortable.push([amount, obj[amount]]);\n            }\n            sortable.sort(function (a, b) {\n                return a[1] - b[1];\n            });\n\n            let objSorted = {}\n            sortable.forEach(function(item){\n                objSorted[item[0]]=item[1]\n            })\n            setAttTotals(objSorted)\n            setSortDir(!sortDir)\n        }\n\n\n\n\n\n\n\n    }\n\n\n\n    const sortByHeader = (key) => {\n        setSortKey(key)\n        setSortDir(!sortDir)\n    }\n\n    const filterResults = async (key) => {\n        let filterItems = items.filter((e, i) => {\n            return e.fields.purchaser === key\n        })\n        setFilteredItems(filterItems)\n    }\n\n    const filterNames = (key) => {\n\n        let obj = {}\n        let keys = items.map((e) => {\n            return key === 'categories' ? e.fields[key][0] : e.fields[key]\n        })\n\n        let uniqueItems = [...new Set(keys)]\n        let totalAtt\n        uniqueItems.map(e => {\n            if (key === 'categories') {\n                totalAtt = categories.filter(g => e === g.id)\n                totalAtt = totalAtt[0].fields.name\n            } else {\n                totalAtt = e\n            }\n            obj[totalAtt] = 0\n            items.map(f => {\n                if (key === 'categories') {\n                    if (f.fields[key][0] === e) {\n                        obj[totalAtt] += f.fields.amount\n                    }\n                } else {\n                    if (f.fields[key] === e) {\n                        obj[totalAtt] += f.fields.amount\n                    }\n                }\n\n\n\n            })\n        })\n        setAttTotals(obj)\n    }\n\n\n\n    const { date, vendor, name, amount, purchaser } = editMode ? currentItem.fields || '' : item\n    const cats = editMode ? currentItem.fields.categories || [] : item.categories || []\n    let total = 0\n    let lyssieTotal = 0\n    let marcaTotal = 0\n\n\n    return (\n        <div>\n            <div className='home'>\n\n                <form style={editMode ? { background: '#f9c3c3' } : {}} onSubmit={(e) => handleSubmit(e, editMode ? currentItem.id : null)}>\n                    <label for={item.date}>Date</label>\n                    <input\n                        className='date'\n                        name='date'\n                        id={item.date}\n                        type='date'\n                        value={date || ''}\n                        onChange={handleChange}\n\n                    />\n                    <label for={item.vendor}>Vendor</label>\n                    <input\n                        className='vendor'\n                        name='vendor'\n                        id={item.vendor}\n                        type='text'\n                        value={vendor || ''}\n                        onChange={handleChange}\n\n                    />\n                    <label for={item.name}>Item</label>\n                    <input\n                        className='name'\n                        name='name'\n                        id={item.name}\n                        type='text'\n                        value={name || ''}\n                        onChange={handleChange}\n\n                    />\n                    <label for={item.amount}>Amount</label>\n                    <input\n                        className='amount'\n                        name='amount'\n                        id={item.amount}\n                        type='number'\n                        step='0.01'\n                        value={amount || ''}\n                        onChange={handleChange}\n                    />\n                    <div>\n                        <label for={item.purchaser}>Lyssie</label>\n                        <input\n                            className='purchaser'\n                            name='purchaser'\n                            id={item.purchaser}\n                            type='radio'\n                            value={'Lyssie'}\n                            onChange={handleChange}\n                            checked={purchaser === 'Lyssie'}\n\n                        />\n                    </div>\n                    <div>\n                        <label for={item.purchaser}>Marca</label>\n                        <input\n                            className='purchaser'\n                            name='purchaser'\n                            id={item.purchaser}\n                            type='radio'\n                            value={'Marca'}\n                            onChange={handleChange}\n                            checked={purchaser === 'Marca'}\n\n                        />\n                    </div>\n                    <div className='categories'>\n                        {alphaSort(categories, 'name').map((e, i) => (\n                            <div key={i} className='category'>\n                                {/* {console.log(cats.includes(e.fields.name))}\n                            {console.log('e', e.fields.name)} */}\n                                {/* {console.log('here', cats.map(e=>Object.keys(e).toString() === e.fields.name))} */}\n                                <input\n                                    index={i}\n                                    className='category'\n                                    name={e.fields.name}\n                                    id={e.id}\n                                    type='checkbox'\n                                    checked={cats.includes(e.id) || false}\n                                    // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                                    onChange={handleChange}\n                                />\n                                <label key={i} for={e.id}>{e.fields.name}</label>\n\n                            </div>\n\n                        ))}\n                    </div>\n                    <input\n                        type='submit'\n                        value='submit'\n                    />\n                </form>\n                <div className='content'>\n                    <div className='details-header'>\n                        {\n                            Object.keys(attTotals).length ?\n                                <>\n                                    <p onClick={() => sortObject(attTotals, 'category')}>category</p>\n                                    <p onClick={() => sortObject(attTotals, 'amount')}>amount</p>\n\n                                </> :\n                                <>\n                                    <p onClick={() => sortByHeader('date')}>Date</p>\n                                    <p onClick={() => sortByHeader('vendor')}>Vendor</p>\n                                    <p onClick={() => sortByHeader('name')}>Name</p>\n                                    <p onClick={() => sortByHeader('amount')} className='amount'>Amount</p>\n                                    <p onClick={() => sortByHeader('purchaser')}>Purchaser</p>\n                                    <p>Categories</p>\n                                    <p>delete</p>\n                                </>\n                        }\n\n                    </div>\n\n\n\n                    <div className='results'>\n\n                        {Object.keys(attTotals).length ?\n                            Object.keys(attTotals).map(e => {\n                                total += parseInt(attTotals[e].toFixed(2))\n                                // lyssieTotal += parseFloat(e.fields.purchaser === 'Lyssie' ? e.fields.amount : 0)\n                                // marcaTotal += parseFloat(e.fields.purchaser === 'Marca' ? e.fields.amount : 0)\n                                return (\n                                    <div className='details'>\n                                        <p>{e}</p>\n                                        <p>{attTotals[e].toFixed(2)}</p>\n                                    </div>\n                                )\n\n                            }) :\n                            alphaSort(filteredItems.length ? filteredItems : items, sortKey).map((e, i) => {\n                                total += parseFloat(e.fields.amount)\n                                lyssieTotal += parseFloat(e.fields.purchaser === 'Lyssie' ? e.fields.amount : 0)\n                                marcaTotal += parseFloat(e.fields.purchaser === 'Marca' ? e.fields.amount : 0)\n\n                                let date = new Date(e.fields.date);\n                                date = new Date(date.getTime() + date.getTimezoneOffset() * 60000)\n                                return (\n                                    <div\n                                        className='details'\n                                        onClick={(evt) => handleUpdate(evt, e.id, i)}\n                                        style={selected === i ? { background: '#f9c3c3' } : {}\n                                        }>\n\n                                        <p>{new Date(date).toLocaleDateString()}</p>\n                                        <p>{e.fields.vendor}</p>\n                                        <p>{e.fields.name}</p>\n                                        <p className='amount'>{e.fields.amount.toFixed(2)}</p>\n                                        <p>{e.fields.purchaser}</p>\n\n                                        <div className='cats'>{categories.filter(el => e.fields.categories.includes(el.id)).map(f => <p>{f.fields.name}</p>)}</div>\n                                        <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n\n                    <div className='total-and-filters'>\n\n                        <div className='filters'>\n\n                            <div className='filters-buttons'>\n                                <button onClick={() => getAllItems()}>List</button>\n                                <button onClick={() => filterNames('vendor')}>Vendors</button>\n                                <button onClick={() => filterNames('categories')}>Categories</button>\n\n\n\n\n\n                            </div>\n                            {/* <div className='totals'>\n                                <div className='att-totals-list'>\n                                    {Object.keys(attTotals).sort().map(e => (\n                                        <div className='attTotals'><span>{e}</span><span>{attTotals[e].toFixed(2)}</span></div>\n                                    ))}\n                                </div>\n                            </div> */}\n                        </div>\n                        <div className='total'>\n                            <div><span onClick={() => filterResults('Lyssie')}>Lyssie</span><span>{lyssieTotal.toFixed(2)}</span></div>\n                            <div><span onClick={() => filterResults('Marca')}>Marca</span><span>{marcaTotal.toFixed(2)}</span></div>\n                            <div><span onClick={() => getAllItems()}>Total</span><span>{total.toFixed(2)}</span></div>\n                        </div>\n                    </div>\n\n\n\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home","\n\nconst Layout = (props) => {\n\n    return(\n        <div>\n            {props.children}\n        </div>\n    )\n}\nexport default Layout","import { Route } from 'react-router-dom'\nimport Header from './Components/Header.jsx'\nimport Home from './Components/Home.jsx'\nimport Layout from './Components/Layout.jsx'\nimport './App.scss';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header className=\"App-header\" />\n      \n      <main>\n        <Layout>\n          <Route exact path='/'>\n            <Home/>\n          </Route>\n        </Layout>\n\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}