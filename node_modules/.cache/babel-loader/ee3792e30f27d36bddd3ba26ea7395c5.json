{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getCategories, getItems } from './services/items';\nimport { createItem } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({});\n  const [amount, setAmount] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postedItem = await createItem({\n      Name: item.name,\n      Amount: parseInt(item.amount),\n      Categories: Object.keys(checked).filter(e => checked[e])\n    });\n    console.log(postedItem);\n    setItems([...items, ...postedItem.data.records]);\n  };\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value);\n    setItem({ ...item,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.Name,\n        children: item.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        id: item.Name,\n        type: \"text\",\n        value: item.name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"amount\",\n        id: item.Name,\n        type: \"number\",\n        value: item.amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), categories.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          index: i,\n          className: \"category\",\n          name: e.fields.Name,\n          id: e.id,\n          type: \"checkbox\",\n          checked: checked[e.id] || false,\n          onChange: e => setChecked({ ...checked,\n            [e.target.id]: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: e.id,\n          children: e.fields.Name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [e.fields.Name, e.fields.Amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"vE2xcecLGddlEflm0E8qQQe+QQs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["useEffect","useState","getCategories","getItems","createItem","Home","item","setItem","amount","setAmount","categories","setCategories","checked","setChecked","items","setItems","getAllCategories","then","res","status","data","records","catch","console","error","handleSubmit","e","preventDefault","postedItem","Name","name","Amount","parseInt","Categories","Object","keys","filter","log","handleChange","target","value","map","i","fields","id"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { getCategories, getItems } from './services/items'\nimport { createItem } from './services/items'\n\n\nconst Home = () => {\n\n    const [item, setItem] = useState({})\n    const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n\n        }\n        getAllCategories();\n\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n\n\n\n        const postedItem = await createItem({Name:item.name, Amount:parseInt(item.amount), Categories:Object.keys(checked).filter(e => checked[e])})\n        console.log(postedItem)\n        setItems([...items, ...postedItem.data.records])\n\n\n    }   \n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value)\n        setItem({...item, [e.target.name]:e.target.value})\n\n    }\n\n\n\n    return (\n        <div className='home'>\n          \n            <form onSubmit={handleSubmit}>\n                <label for={item.Name}>{item.Name}</label>\n                <input\n                    name='name'\n                    id={item.Name}\n                    type='text'\n                    value={item.name || ''}\n                    onChange={handleChange}\n\n                />\n                <input\n                    name='amount'\n                    id={item.Name}\n                    type='number'\n                    value={item.amount || ''}\n                    onChange={handleChange}\n                />\n                {categories.map((e, i) => (\n                    <div key={i}>\n                        <input\n                            index={i}\n                            className='category'\n                            name={e.fields.Name}\n                            id={e.id}\n                            type='checkbox'\n                            checked={checked[e.id] || false}\n                            onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                        />\n                            <label key={i} for={e.id}>{e.fields.Name}</label>\n\n                    </div>\n\n                ))}\n                <input\n                    type='submit'\n                    value='submit'\n                />\n            </form>\n\n            {items.map((e, i) => (\n                <div>{e.fields.Name}{e.fields.Amount}</div>\n            ))}\n\n        </div>\n\n\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}