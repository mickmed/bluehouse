{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getItemsWithOffset, getCategories } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({}); // const [amount, setAmount] = useState('')\n\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState({});\n  const [selected, setSelected] = useState();\n  const [sortKey, setSortKey] = useState('');\n  const [sortDir, setSortDir] = useState(true);\n  const [offset, setOffset] = useState(' ');\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n  useEffect(() => {\n    console.log('no offset');\n\n    const getAllItems = async () => {\n      console.log('no offset inside');\n      let resp = await getItems();\n      console.log('no offset resp', resp);\n\n      if (resp.data.records.length === 100) {\n        setOffset(resp.data.offset); // console.log('here')\n        // let x = await getItemsWithOffset(resp.data.offset)\n        // console.log(x)\n      }\n\n      setItems([...items, ...resp.data.records]);\n    };\n\n    getAllItems();\n  }, []);\n  useEffect(() => {\n    console.log(offset);\n\n    const getAllItems = async () => {\n      console.log('offset inside', offset);\n      let resp = await getItems(offset);\n      console.log(items);\n\n      if (items.length === 100) {\n        console.log('here offset', offset); // setOffset(resp.data.offset)\n        // console.log('here')\n\n        let resp = await getItemsWithOffset(offset);\n        console.log(resp); // setOffset(resp.data.offset)\n        // console.log(x)\n      } // setItems([...items, ...resp.data.records])\n\n    };\n\n    getAllItems();\n  }, [offset]);\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value, e.target.type, e.target.checked);\n    let key, value, newItem;\n\n    if (e.target.type === 'checkbox') {\n      newItem = { ...currentItem\n      };\n\n      if (editMode) {\n        if ('categories' in newItem.fields) {\n          if (e.target.checked) {\n            newItem.fields.categories.push(e.target.id);\n          } else {\n            console.log('false');\n            const index = newItem.fields.categories.indexOf(e.target.id);\n            newItem.fields.categories.splice(index, 1);\n          }\n        } else {\n          newItem.fields.categories = [e.target.id];\n        }\n      } else {\n        newItem = { ...item\n        };\n        console.log('not edit');\n\n        if ('categories' in newItem) {\n          console.log('remove nw');\n          e.target.checked ? newItem.categories.push(e.target.id) : newItem.categories.splice(newItem.categories.indexOf(e.target.id), 1);\n        } else {\n          console.log('new');\n          newItem.categories = [e.target.id];\n        }\n\n        console.log(newItem);\n      }\n\n      editMode ? setCurrentItem(newItem) : setItem(newItem);\n    } else {\n      key = e.target.name;\n      value = e.target.value;\n      editMode ? setCurrentItem({ ...currentItem,\n        fields: { ...currentItem.fields,\n          [key]: value\n        }\n      }) : setItem({ ...item,\n        [key]: value\n      });\n    }\n  };\n\n  const handleUpdate = async (e, id, i) => {\n    const current = await getItemById(id);\n    setCurrentItem(current);\n    setSelected(i);\n    setEditMode(true);\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n    const {\n      name,\n      amount,\n      vendor,\n      categories,\n      date,\n      purchaser\n    } = editMode ? currentItem.fields : item;\n    console.log(categories);\n    const newItem = {\n      name: name,\n      amount: parseFloat(amount),\n      vendor: vendor,\n      categories: categories,\n      date: date,\n      purchaser: purchaser\n    };\n    console.log(newItem);\n\n    if (editMode) {\n      const updatedItem = await updateItem(newItem, id);\n      const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)];\n      setItems(newItems);\n      setEditMode(false);\n      setItem({});\n      setSelected();\n    } else {\n      const postedItem = await createItem(newItem);\n      setItems([...items, ...postedItem.records]);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    deleteItem(id);\n    console.log(...items.filter(el => el.id !== id));\n    let blah = [...items].filter(el => el.id !== id);\n    console.log(blah);\n    setItems(blah);\n  };\n\n  const alphaSort = (array, sortParam) => {\n    const compare = (a, b) => {\n      let paramA;\n      let paramB;\n\n      if (sortParam === 'date') {\n        paramA = Date.parse(a.fields[sortParam]);\n        paramB = Date.parse(b.fields[sortParam]);\n      } else {\n        paramA = a.fields[sortParam];\n        paramB = b.fields[sortParam];\n      }\n\n      if (sortDir) {\n        if (paramA < paramB) {\n          return -1;\n        }\n\n        if (paramA > paramB) {\n          return 1;\n        }\n      } else if (Object.keys(array[0].fields).includes('vendor')) {\n        if (paramA > paramB) {\n          return -1;\n        }\n\n        if (paramA < paramB) {\n          return 1;\n        }\n      }\n\n      return 0;\n    };\n\n    array.sort(compare);\n    return array;\n  };\n\n  const sortByHeader = key => {\n    setSortKey(key);\n    setSortDir(!sortDir);\n  };\n\n  const {\n    date,\n    vendor,\n    name,\n    amount,\n    purchaser\n  } = editMode ? currentItem.fields || '' : item;\n  const cats = editMode ? currentItem.fields.categories || [] : item.categories || []; // console.log(cats)\n\n  let total = 0;\n  let lyssieTotal = 0;\n  let marcaTotal = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: editMode ? {\n        background: '#f9c3c3'\n      } : {},\n      onSubmit: e => handleSubmit(e, editMode ? currentItem.id : null),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.date,\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        name: \"date\",\n        id: item.date,\n        type: \"date\",\n        value: date || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.vendor,\n        children: \"Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"vendor\",\n        name: \"vendor\",\n        id: item.vendor,\n        type: \"text\",\n        value: vendor || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.name,\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        id: item.name,\n        type: \"text\",\n        value: name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.amount,\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount\",\n        name: \"amount\",\n        id: item.amount,\n        type: \"number\",\n        step: \"0.01\",\n        value: amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Lyssie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Lyssie',\n          onChange: handleChange,\n          checked: purchaser === 'Lyssie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Marca',\n          onChange: handleChange,\n          checked: purchaser === 'Marca'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: alphaSort(categories, 'name').map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            className: \"category\",\n            name: e.fields.name,\n            id: e.id,\n            type: \"checkbox\",\n            checked: cats.includes(e.id) || false // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: e.id,\n            children: e.fields.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('date'),\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('vendor'),\n          children: \"Vendor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('name'),\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('amount'),\n          className: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('purchaser'),\n          children: \"Purchaser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: alphaSort(items, sortKey).map((e, i) => {\n          total += parseFloat(e.fields.amount);\n          lyssieTotal += parseFloat(e.fields.purchaser === 'Lyssie' ? e.fields.amount : 0);\n          marcaTotal += parseFloat(e.fields.purchaser === 'Marca' ? e.fields.amount : 0);\n          let date = new Date(e.fields.date);\n          date = new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            onClick: evt => handleUpdate(evt, e.id, i),\n            style: selected === i ? {\n              background: '#f9c3c3'\n            } : {},\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: new Date(date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: e.fields.vendor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: e.fields.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"amount\",\n              children: e.fields.amount.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: e.fields.purchaser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cats\",\n              children: categories.filter(el => e.fields.categories.includes(el.id)).map(f => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: f.fields.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 126\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: evt => handleDelete(evt, e.id),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total\",\n        children: ['Total: ' + total.toFixed(2), 'TotalL: ' + lyssieTotal.toFixed(2), 'TotalL: ' + marcaTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"42bdnzBhzvaaIu7oVgDZ2CbKaaA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["useEffect","useState","getItemById","createItem","updateItem","deleteItem","getItems","getItemsWithOffset","getCategories","Home","item","setItem","categories","setCategories","checked","setChecked","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","selected","setSelected","sortKey","setSortKey","sortDir","setSortDir","offset","setOffset","getAllCategories","then","res","status","data","records","catch","console","error","log","getAllItems","resp","length","handleChange","e","target","name","value","type","key","newItem","fields","push","id","index","indexOf","splice","handleUpdate","i","current","handleSubmit","preventDefault","amount","vendor","date","purchaser","parseFloat","updatedItem","newItems","map","el","postedItem","handleDelete","filter","blah","alphaSort","array","sortParam","compare","a","b","paramA","paramB","Date","parse","Object","keys","includes","sort","sortByHeader","cats","total","lyssieTotal","marcaTotal","background","getTime","getTimezoneOffset","evt","toLocaleDateString","toFixed","f"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getItemsWithOffset, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n    const [selected, setSelected] = useState()\n    const [sortKey, setSortKey] = useState('')\n    const [sortDir, setSortDir] = useState(true)\n    const [offset, setOffset] = useState(' ')\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories()\n    }, []);\n\n    useEffect(() => {\n        console.log('no offset')\n        const getAllItems = async () => {\n            console.log('no offset inside')\n            let resp = await getItems()\n            console.log('no offset resp', resp)\n            if (resp.data.records.length === 100) {\n                setOffset(resp.data.offset)\n                // console.log('here')\n                \n                // let x = await getItemsWithOffset(resp.data.offset)\n                // console.log(x)\n\n            }\n            setItems([...items, ...resp.data.records])\n        }\n        getAllItems()\n    }, [])\n\n\n    useEffect(() => {\n        console.log(offset)\n        const getAllItems = async () => {\n            console.log('offset inside', offset)\n            let resp = await getItems(offset)\n            console.log(items)\n            if (items.length === 100) {\n                console.log('here offset', offset)\n                // setOffset(resp.data.offset)\n                // console.log('here')\n                \n                let resp = await getItemsWithOffset(offset)\n                console.log(resp)\n                // setOffset(resp.data.offset)\n\n                // console.log(x)\n\n            }\n            // setItems([...items, ...resp.data.records])\n        }\n        getAllItems()\n    }, [offset])\n\n\n\n\n\n\n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value, e.target.type, e.target.checked)\n        let key, value, newItem\n        if (e.target.type === 'checkbox') {\n            newItem = { ...currentItem }\n            if (editMode) {\n\n                if ('categories' in newItem.fields) {\n                    if (e.target.checked) {\n                        newItem.fields.categories.push(e.target.id)\n                    } else {\n                        console.log('false')\n                        const index = newItem.fields.categories.indexOf(e.target.id)\n                        newItem.fields.categories.splice(index, 1)\n\n                    }\n\n\n                } else {\n                    newItem.fields.categories = [e.target.id]\n                }\n\n\n            } else {\n                newItem = { ...item }\n                console.log('not edit')\n                if ('categories' in newItem) {\n                    console.log('remove nw')\n                    e.target.checked ? newItem.categories.push(e.target.id) :\n                        newItem.categories.splice(newItem.categories.indexOf(e.target.id), 1)\n\n                } else {\n                    console.log('new')\n                    newItem.categories = [e.target.id]\n                }\n\n                console.log(newItem)\n            }\n\n\n            editMode ?\n                setCurrentItem(newItem) :\n                setItem(newItem)\n\n        } else {\n            key = e.target.name\n            value = e.target.value\n\n            editMode ?\n                setCurrentItem({ ...currentItem, fields: { ...currentItem.fields, [key]: value } }) :\n                setItem({ ...item, [key]: value })\n        }\n    }\n\n\n    const handleUpdate = async (e, id, i) => {\n        const current = await getItemById(id)\n        setCurrentItem(current)\n        setSelected(i)\n\n        setEditMode(true)\n\n    }\n\n\n\n    const handleSubmit = async (e, id) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem.fields : item\n        console.log(categories)\n        const newItem = {\n            name: name,\n            amount: parseFloat(amount),\n            vendor: vendor,\n            categories: categories,\n            date: date,\n            purchaser: purchaser\n        }\n        console.log(newItem)\n        if (editMode) {\n            const updatedItem = await updateItem(newItem, id)\n            const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)]\n            setItems(newItems)\n            setEditMode(false)\n            setItem({})\n            setSelected()\n        } else {\n            const postedItem = await createItem(newItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n\n\n\n\n\n    }\n\n\n\n    const handleDelete = (e, id) => {\n\n        e.preventDefault()\n        console.log(id)\n        deleteItem(id)\n        console.log(...items.filter(el => el.id !== id))\n        let blah = [...items].filter(el => el.id !== id)\n        console.log(blah)\n        setItems(blah)\n    }\n    const alphaSort = (array, sortParam) => {\n        const compare = (a, b) => {\n            let paramA\n            let paramB\n            if (sortParam === 'date') {\n                paramA = Date.parse(a.fields[sortParam])\n                paramB = Date.parse(b.fields[sortParam])\n\n            } else {\n\n                paramA = a.fields[sortParam]\n                paramB = b.fields[sortParam]\n            }\n            if (sortDir) {\n\n                if (paramA < paramB) {\n                    return -1;\n                }\n                if (paramA > paramB) {\n                    return 1;\n                }\n            } else if (Object.keys(array[0].fields).includes('vendor')) {\n\n                if (paramA > paramB) {\n                    return -1;\n                }\n                if (paramA < paramB) {\n                    return 1;\n                }\n\n            }\n            return 0;\n\n        }\n        array.sort(compare)\n        return array\n\n    }\n\n    const sortByHeader = (key) => {\n        setSortKey(key)\n        setSortDir(!sortDir)\n    }\n\n\n    const { date, vendor, name, amount, purchaser } = editMode ? currentItem.fields || '' : item\n    const cats = editMode ? currentItem.fields.categories || [] : item.categories || []\n    // console.log(cats)\n    let total = 0\n    let lyssieTotal = 0\n    let marcaTotal = 0\n\n    return (\n        <div className='home'>\n\n            <form style={editMode ? { background: '#f9c3c3' } : {}} onSubmit={(e) => handleSubmit(e, editMode ? currentItem.id : null)}>\n                <label for={item.date}>Date</label>\n                <input\n                    className='date'\n                    name='date'\n                    id={item.date}\n                    type='date'\n                    value={date || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.vendor}>Vendor</label>\n                <input\n                    className='vendor'\n                    name='vendor'\n                    id={item.vendor}\n                    type='text'\n                    value={vendor || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.name}>Item</label>\n                <input\n                    className='name'\n                    name='name'\n                    id={item.name}\n                    type='text'\n                    value={name || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.amount}>Amount</label>\n                <input\n                    className='amount'\n                    name='amount'\n                    id={item.amount}\n                    type='number'\n                    step='0.01'\n                    value={amount || ''}\n                    onChange={handleChange}\n                />\n                <div>\n                    <label for={item.purchaser}>Lyssie</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Lyssie'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Lyssie'}\n\n                    />\n                </div>\n                <div>\n                    <label for={item.purchaser}>Marca</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Marca'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Marca'}\n\n                    />\n                </div>\n                <div className='categories'>\n                    {alphaSort(categories, 'name').map((e, i) => (\n                        <div key={i} className='category'>\n                            {/* {console.log(cats.includes(e.fields.name))}\n                            {console.log('e', e.fields.name)} */}\n                            {/* {console.log('here', cats.map(e=>Object.keys(e).toString() === e.fields.name))} */}\n                            <input\n                                index={i}\n                                className='category'\n                                name={e.fields.name}\n                                id={e.id}\n                                type='checkbox'\n                                checked={cats.includes(e.id) || false}\n                                // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                                onChange={handleChange}\n                            />\n                            <label key={i} for={e.id}>{e.fields.name}</label>\n\n                        </div>\n\n                    ))}\n                </div>\n                <input\n                    type='submit'\n                    value='submit'\n                />\n            </form>\n            <div className='content'>\n                <div className='details-header'>\n                    <p onClick={() => sortByHeader('date')}>Date</p>\n                    <p onClick={() => sortByHeader('vendor')}>Vendor</p>\n                    <p onClick={() => sortByHeader('name')}>Name</p>\n                    <p onClick={() => sortByHeader('amount')} className='amount'>Amount</p>\n                    <p onClick={() => sortByHeader('purchaser')}>Purchaser</p>\n                    <p>Categories</p>\n                    <p>delete</p>\n                </div>\n\n\n\n                <div className='temp'>\n                    {alphaSort(items, sortKey).map((e, i) => {\n                        total += parseFloat(e.fields.amount)\n                        lyssieTotal += parseFloat(e.fields.purchaser === 'Lyssie' ? e.fields.amount : 0)\n                        marcaTotal += parseFloat(e.fields.purchaser === 'Marca' ? e.fields.amount : 0)\n\n                        let date = new Date(e.fields.date);\n                        date = new Date(date.getTime() + date.getTimezoneOffset() * 60000)\n                        return (\n                            <div\n                                className='details'\n                                onClick={(evt) => handleUpdate(evt, e.id, i)}\n                                style={selected === i ? { background: '#f9c3c3' } : {}}>\n\n                                <p>{new Date(date).toLocaleDateString()}</p>\n                                <p>{e.fields.vendor}</p>\n                                <p>{e.fields.name}</p>\n                                <p className='amount'>{e.fields.amount.toFixed(2)}</p>\n                                <p>{e.fields.purchaser}</p>\n\n                                <div className='cats'>{categories.filter(el => e.fields.categories.includes(el.id)).map(f => <p>{f.fields.name}</p>)}</div>\n                                <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                            </div>\n                        )\n                    })}\n                </div>\n\n                <div className='total'>\n                    {'Total: ' + total.toFixed(2)}\n                    {'TotalL: ' + lyssieTotal.toFixed(2)}\n                    {'TotalL: ' + marcaTotal.toFixed(2)}\n\n\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}