{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport e from 'cors';\nimport { useEffect, useState } from 'react';\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({}); // const [amount, setAmount] = useState('')\n\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState({});\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value);\n    editMode ? setCurrentItem({ ...currentItem,\n      [e.target.name]: e.target.value\n    }) : setItem({ ...item,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      amount,\n      vendor,\n      categories,\n      date,\n      purchaser\n    } = editMode ? currentItem : item;\n    const newItem = {\n      name: name,\n      amount: parseInt(amount),\n      vendor: vendor,\n      categories: Object.keys(checked).filter(e => checked[e]),\n      date: date,\n      purchaser: purchaser\n    };\n\n    if (editMode) {\n      const updatedItem = await updateItem(newItem);\n      console.log([...items, updatedItem.records]); // setItems([...items, updatedItem.records])\n      // const findItem = [...items.filter(e=>e.id === id)]\n      // console.log(findItem)\n    } else {\n      const postedItem = await createItem(newItem);\n      console.log(postedItem);\n      setItems([...items, ...postedItem.records]);\n    }\n  };\n\n  const handleUpdate = async (e, id) => {\n    const current = await getItemById(id);\n    console.log(current.fields);\n    setCurrentItem(current.fields);\n    setEditMode(true); // console.log(currentItem)\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    deleteItem(id);\n    console.log(...items.filter(el => el.id !== id));\n    let blah = [...items].filter(el => el.id !== id);\n    console.log(blah);\n    setItems(blah);\n  };\n\n  const compare = (a, b) => {\n    if (a.fields.Name < b.fields.Name) {\n      return -1;\n    }\n\n    if (a.fields.Name > b.fields.Name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  const {\n    date,\n    vendor,\n    name,\n    amount,\n    purchaser\n  } = editMode ? currentItem : item;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.date,\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        name: \"date\",\n        id: item.date,\n        type: \"date\",\n        value: date || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.vendor,\n        children: \"Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"vendor\",\n        name: \"vendor\",\n        id: item.vendor,\n        type: \"text\",\n        value: vendor || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.name,\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        id: item.name,\n        type: \"text\",\n        value: name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.amount,\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount\",\n        name: \"amount\",\n        id: item.amount,\n        type: \"number\",\n        value: amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Lyssie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Lyssie',\n          onChange: handleChange,\n          checked: purchaser === 'Lyssie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Marca',\n          onChange: handleChange,\n          checked: purchaser === 'Marca'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: categories.sort(compare).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            className: \"category\",\n            name: e.fields.name,\n            id: e.id,\n            type: \"checkbox\",\n            checked: checked[e.id] || false,\n            onChange: e => setChecked({ ...checked,\n              [e.target.id]: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: e.id,\n            children: e.fields.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        onClick: evt => handleUpdate(evt, e.id),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(e.fields.date).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.purchaser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: evt => handleDelete(evt, e.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"Z0siDZFwvO6E9Ke/jcBP44VWtfw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["e","useEffect","useState","getItemById","createItem","updateItem","deleteItem","getItems","getCategories","Home","item","setItem","categories","setCategories","checked","setChecked","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","getAllCategories","then","res","status","data","records","catch","console","error","handleChange","log","target","name","value","handleSubmit","preventDefault","amount","vendor","date","purchaser","newItem","parseInt","Object","keys","filter","updatedItem","postedItem","handleUpdate","id","current","fields","handleDelete","el","blah","compare","a","b","Name","sort","map","i","evt","Date","toDateString"],"mappings":"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","sourcesContent":["\nimport e from 'cors'\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories();\n\n    }, []);\n\n\n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value)\n        editMode ?\n            setCurrentItem({ ...currentItem, [e.target.name]: e.target.value }) :\n            setItem({ ...item, [e.target.name]: e.target.value })\n    }\n\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem : item\n        const newItem = {\n            name: name,\n            amount: parseInt(amount),\n            vendor: vendor,\n            categories: Object.keys(checked).filter(e => checked[e]),\n            date: date,\n            purchaser: purchaser\n        }\n        if (editMode) {\n            const updatedItem = await updateItem(newItem)\n            console.log([...items, updatedItem.records])\n            // setItems([...items, updatedItem.records])\n            // const findItem = [...items.filter(e=>e.id === id)]\n            // console.log(findItem)\n        } else {\n\n            const postedItem = await createItem(newItem)\n            console.log(postedItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n\n\n\n        \n        \n    }\n\nconst handleUpdate = async (e, id) => {\n    const current = await getItemById(id)\n    console.log(current.fields)\n    setCurrentItem(current.fields)\n\n    setEditMode(true)\n    // console.log(currentItem)\n\n}\n\nconst handleDelete = (e, id) => {\n\n    e.preventDefault()\n    console.log(id)\n    deleteItem(id)\n    console.log(...items.filter(el => el.id !== id))\n    let blah = [...items].filter(el => el.id !== id)\n    console.log(blah)\n    setItems(blah)\n}\n\nconst compare = (a, b) => {\n    if (a.fields.Name < b.fields.Name) {\n        return -1;\n    }\n    if (a.fields.Name > b.fields.Name) {\n        return 1;\n    }\n    return 0;\n}\n\nconst { date, vendor, name, amount, purchaser} = editMode ? currentItem : item\nreturn (\n    <div className='home'>\n\n        <form onSubmit={handleSubmit}>\n            <label for={item.date}>Date</label>\n            <input\n                className='date'\n                name='date'\n                id={item.date}\n                type='date'\n                value={date || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.vendor}>Vendor</label>\n            <input\n                className='vendor'\n                name='vendor'\n                id={item.vendor}\n                type='text'\n                value={vendor || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.name}>Item</label>\n            <input\n                className='name'\n                name='name'\n                id={item.name}\n                type='text'\n                value={name || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.amount}>Amount</label>\n            <input\n                className='amount'\n                name='amount'\n                id={item.amount}\n                type='number'\n                value={amount || ''}\n                onChange={handleChange}\n            />\n            <div>\n                <label for={item.purchaser}>Lyssie</label>\n                <input\n                    className='purchaser'\n                    name='purchaser'\n                    id={item.purchaser}\n                    type='radio'\n                    value={'Lyssie'}\n                    onChange={handleChange}\n                    checked={purchaser === 'Lyssie'}\n\n                />\n            </div>\n            <div>\n                <label for={item.purchaser}>Marca</label>\n                <input\n                    className='purchaser'\n                    name='purchaser'\n                    id={item.purchaser}\n                    type='radio'\n                    value={'Marca'}\n                    onChange={handleChange}\n                    checked={purchaser === 'Marca'}\n\n                />\n            </div>\n            <div className='categories'>\n                {categories.sort(compare).map((e, i) => (\n                    <div key={i} className='category'>\n                        <input\n                            index={i}\n                            className='category'\n                            name={e.fields.name}\n                            id={e.id}\n                            type='checkbox'\n                            checked={checked[e.id] || false}\n                            onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                        />\n                        <label key={i} for={e.id}>{e.fields.name}</label>\n\n                    </div>\n\n                ))}\n            </div>\n            <input\n                type='submit'\n                value='submit'\n            />\n        </form>\n        <div className='content'>\n\n\n            {items.map((e, i) => (\n                <div className='details' onClick={(evt) => handleUpdate(evt, e.id)}>\n                    <p>{new Date(e.fields.date).toDateString()}</p>\n                    {/* <p>{new Date(e.fields.Date.getFullYear(), e.fields.Date.getMonth(), e.fields.Date.getDate())}</p> */}\n                    <p>{e.fields.vendor}</p>\n                    <p>{e.fields.name}</p>\n                    <p>{e.fields.amount}</p>\n                    <p>{e.fields.purchaser}</p>\n                    <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                </div>\n            ))}\n\n        </div>\n    </div>\n\n)\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}