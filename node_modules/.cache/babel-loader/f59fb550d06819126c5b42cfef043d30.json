{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport e from 'cors';\nimport { useEffect, useState } from 'react';\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({}); // const [amount, setAmount] = useState('')\n\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState({});\n  const [selected, setSelected] = useState();\n  const [sortKey, setSortKey] = useState('');\n  const [sortDir, setSortDir] = useState(true);\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value, e.target.type, e.target.checked);\n    let key, value, newItem;\n\n    if (e.target.type === 'checkbox') {\n      newItem = { ...currentItem\n      };\n\n      if (editMode) {\n        if ('categories' in newItem.fields) {\n          if (e.target.checked) {\n            newItem.fields.categories.push(e.target.id);\n          } else {\n            console.log('false');\n            const index = newItem.fields.categories.indexOf(e.target.id);\n            newItem.fields.categories.splice(index, 1);\n          }\n        } else {\n          newItem.fields.categories = [e.target.id];\n        }\n      } else {\n        newItem = { ...item\n        };\n        console.log('not edit');\n\n        if ('categories' in newItem) {\n          console.log('remove nw');\n          e.target.checked ? newItem.categories.push(e.target.id) : newItem.categories.splice(newItem.categories.indexOf(e.target.id), 1);\n        } else {\n          console.log('new');\n          newItem.categories = [e.target.id];\n        }\n\n        console.log(newItem);\n      }\n\n      editMode ? setCurrentItem(newItem) : setItem(newItem);\n    } else {\n      key = e.target.name;\n      value = e.target.value;\n      editMode ? setCurrentItem({ ...currentItem,\n        fields: { ...currentItem.fields,\n          [key]: value\n        }\n      }) : setItem({ ...item,\n        [key]: value\n      });\n    }\n  };\n\n  const handleUpdate = async (e, id, i) => {\n    const current = await getItemById(id);\n    setCurrentItem(current);\n    setSelected(i);\n    setEditMode(true);\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n    const {\n      name,\n      amount,\n      vendor,\n      categories,\n      date,\n      purchaser\n    } = editMode ? currentItem.fields : item;\n    console.log(categories);\n    const newItem = {\n      name: name,\n      amount: parseInt(amount),\n      vendor: vendor,\n      categories: categories,\n      date: date,\n      purchaser: purchaser\n    };\n    console.log(newItem);\n\n    if (editMode) {\n      const updatedItem = await updateItem(newItem, id);\n      const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)];\n      setItems(newItems);\n      setEditMode(false);\n      setItem({});\n      setSelected();\n    } else {\n      const postedItem = await createItem(newItem);\n      setItems([...items, ...postedItem.records]);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    deleteItem(id);\n    console.log(...items.filter(el => el.id !== id));\n    let blah = [...items].filter(el => el.id !== id);\n    console.log(blah);\n    setItems(blah);\n  };\n\n  const alphaSort = (array, sortParam) => {\n    console.log(array, sortParam);\n\n    const compare = (a, b) => {\n      if (sortDir) {\n        if (a.fields[sortParam] < b.fields[sortParam]) {\n          return -1;\n        }\n\n        if (a.fields[sortParam] > b.fields[sortParam]) {\n          return 1;\n        }\n      } else if (Object.keys(array[0]).includes('vendor')) {\n        console.log('here', array);\n\n        if (a.fields[sortParam] > b.fields[sortParam]) {\n          return -1;\n        }\n\n        if (a.fields[sortParam] < b.fields[sortParam]) {\n          return 1;\n        }\n      }\n\n      return 0;\n    };\n\n    array.sort(compare);\n    console.log(array);\n    return array;\n  };\n\n  const sortByHeader = key => {\n    setSortKey(key);\n    setSortDir(!sortDir);\n  };\n\n  const {\n    date,\n    vendor,\n    name,\n    amount,\n    purchaser\n  } = editMode ? currentItem.fields || '' : item;\n  const cats = editMode ? currentItem.fields.categories || [] : item.categories || []; // console.log(cats)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: editMode ? {\n        background: '#f9c3c3'\n      } : {},\n      onSubmit: e => handleSubmit(e, editMode ? currentItem.id : null),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.date,\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        name: \"date\",\n        id: item.date,\n        type: \"date\",\n        value: date || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.vendor,\n        children: \"Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"vendor\",\n        name: \"vendor\",\n        id: item.vendor,\n        type: \"text\",\n        value: vendor || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.name,\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        id: item.name,\n        type: \"text\",\n        value: name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.amount,\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount\",\n        name: \"amount\",\n        id: item.amount,\n        type: \"number\",\n        value: amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Lyssie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Lyssie',\n          onChange: handleChange,\n          checked: purchaser === 'Lyssie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Marca',\n          onChange: handleChange,\n          checked: purchaser === 'Marca'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: alphaSort(categories, 'name').map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            className: \"category\",\n            name: e.fields.name,\n            id: e.id,\n            type: \"checkbox\",\n            checked: cats.includes(e.id) || false // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: e.id,\n            children: e.fields.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('date'),\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('vendor'),\n          children: \"Vendor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => sortByHeader('name'),\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Purchaser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), alphaSort(items, sortKey).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        onClick: evt => handleUpdate(evt, e.id, i),\n        style: selected === i ? {\n          background: '#f9c3c3'\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(e.fields.date).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.purchaser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cats\",\n          children: categories.filter(el => e.fields.categories.includes(el.id)).map(f => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: f.fields.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 118\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: evt => handleDelete(evt, e.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"495dlRs4TFESipHCagoykLGmzrk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["e","useEffect","useState","getItemById","createItem","updateItem","deleteItem","getItems","getCategories","Home","item","setItem","categories","setCategories","checked","setChecked","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","selected","setSelected","sortKey","setSortKey","sortDir","setSortDir","getAllCategories","then","res","status","data","records","catch","console","error","handleChange","log","target","name","value","type","key","newItem","fields","push","id","index","indexOf","splice","handleUpdate","i","current","handleSubmit","preventDefault","amount","vendor","date","purchaser","parseInt","updatedItem","newItems","map","el","postedItem","handleDelete","filter","blah","alphaSort","array","sortParam","compare","a","b","Object","keys","includes","sort","sortByHeader","cats","background","evt","Date","toDateString","f"],"mappings":"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","sourcesContent":["\nimport e from 'cors'\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n    const [selected, setSelected] = useState()\n    const [sortKey, setSortKey] = useState('')\n    const [sortDir, setSortDir] = useState(true)\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories();\n\n    }, []);\n\n\n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value, e.target.type, e.target.checked)\n        let key, value, newItem\n        if (e.target.type === 'checkbox') {\n            newItem = { ...currentItem }\n            if (editMode) {\n\n                if ('categories' in newItem.fields) {\n                    if (e.target.checked) {\n                        newItem.fields.categories.push(e.target.id)\n                    } else {\n                        console.log('false')\n                        const index = newItem.fields.categories.indexOf(e.target.id)\n                        newItem.fields.categories.splice(index, 1)\n\n                    }\n\n\n                } else {\n                    newItem.fields.categories = [e.target.id]\n                }\n\n\n            } else {\n                newItem = { ...item }\n                console.log('not edit')\n                if ('categories' in newItem) {\n                    console.log('remove nw')\n                    e.target.checked ? newItem.categories.push(e.target.id) :\n                        newItem.categories.splice(newItem.categories.indexOf(e.target.id), 1)\n\n                } else {\n                    console.log('new')\n                    newItem.categories = [e.target.id]\n                }\n\n                console.log(newItem)\n            }\n\n\n            editMode ?\n                setCurrentItem(newItem) :\n                setItem(newItem)\n\n        } else {\n            key = e.target.name\n            value = e.target.value\n\n            editMode ?\n                setCurrentItem({ ...currentItem, fields: { ...currentItem.fields, [key]: value } }) :\n                setItem({ ...item, [key]: value })\n        }\n    }\n\n\n    const handleUpdate = async (e, id, i) => {\n        const current = await getItemById(id)\n        setCurrentItem(current)\n        setSelected(i)\n\n        setEditMode(true)\n\n    }\n\n\n\n    const handleSubmit = async (e, id) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem.fields : item\n        console.log(categories)\n        const newItem = {\n            name: name,\n            amount: parseInt(amount),\n            vendor: vendor,\n            categories: categories,\n            date: date,\n            purchaser: purchaser\n        }\n        console.log(newItem)\n        if (editMode) {\n            const updatedItem = await updateItem(newItem, id)\n            const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)]\n            setItems(newItems)\n            setEditMode(false)\n            setItem({})\n            setSelected()\n        } else {\n            const postedItem = await createItem(newItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n\n\n\n\n\n    }\n\n\n\n    const handleDelete = (e, id) => {\n\n        e.preventDefault()\n        console.log(id)\n        deleteItem(id)\n        console.log(...items.filter(el => el.id !== id))\n        let blah = [...items].filter(el => el.id !== id)\n        console.log(blah)\n        setItems(blah)\n    }\n    const alphaSort = (array, sortParam) => {\n        console.log(array, sortParam)\n        const compare = (a, b) => {\n            \n\n            if (sortDir) {\n                if (a.fields[sortParam] < b.fields[sortParam]) {\n                    return -1;\n                }\n                if (a.fields[sortParam] > b.fields[sortParam]) {\n                    return 1;\n                }\n            } else if(Object.keys(array[0]).includes('vendor')) {\nconsole.log('here', array)\n                if (a.fields[sortParam] > b.fields[sortParam]) {\n                    return -1;\n                }\n                if (a.fields[sortParam] < b.fields[sortParam]) {\n                    return 1;\n                }\n\n            }\n            return 0;\n\n\n        }\n        array.sort(compare)\n        console.log(array)\n        return array\n\n    }\n\n    const sortByHeader = (key) => {\n        setSortKey(key)\n        setSortDir(!sortDir)\n    }\n\n\n    const { date, vendor, name, amount, purchaser } = editMode ? currentItem.fields || '' : item\n    const cats = editMode ? currentItem.fields.categories || [] : item.categories || []\n    // console.log(cats)\n    return (\n        <div className='home'>\n\n            <form style={editMode ? { background: '#f9c3c3' } : {}} onSubmit={(e) => handleSubmit(e, editMode ? currentItem.id : null)}>\n                <label for={item.date}>Date</label>\n                <input\n                    className='date'\n                    name='date'\n                    id={item.date}\n                    type='date'\n                    value={date || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.vendor}>Vendor</label>\n                <input\n                    className='vendor'\n                    name='vendor'\n                    id={item.vendor}\n                    type='text'\n                    value={vendor || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.name}>Item</label>\n                <input\n                    className='name'\n                    name='name'\n                    id={item.name}\n                    type='text'\n                    value={name || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.amount}>Amount</label>\n                <input\n                    className='amount'\n                    name='amount'\n                    id={item.amount}\n                    type='number'\n                    value={amount || ''}\n                    onChange={handleChange}\n                />\n                <div>\n                    <label for={item.purchaser}>Lyssie</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Lyssie'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Lyssie'}\n\n                    />\n                </div>\n                <div>\n                    <label for={item.purchaser}>Marca</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Marca'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Marca'}\n\n                    />\n                </div>\n                <div className='categories'>\n                    {alphaSort(categories, 'name').map((e, i) => (\n                        <div key={i} className='category'>\n                            {/* {console.log(cats.includes(e.fields.name))}\n                            {console.log('e', e.fields.name)} */}\n                            {/* {console.log('here', cats.map(e=>Object.keys(e).toString() === e.fields.name))} */}\n                            <input\n                                index={i}\n                                className='category'\n                                name={e.fields.name}\n                                id={e.id}\n                                type='checkbox'\n                                checked={cats.includes(e.id) || false}\n                                // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                                onChange={handleChange}\n                            />\n                            <label key={i} for={e.id}>{e.fields.name}</label>\n\n                        </div>\n\n                    ))}\n                </div>\n                <input\n                    type='submit'\n                    value='submit'\n                />\n            </form>\n            <div className='content'>\n                <div className='details-header'>\n                    <p onClick={() => sortByHeader('date')}>Date</p>\n                    <p onClick={() => sortByHeader('vendor')}>Vendor</p>\n                    <p onClick={() => sortByHeader('name')}>Name</p>\n                    <p>Amount</p>\n                    <p>Purchaser</p>\n                    <p>Categories</p>\n                    <p>X</p>\n                </div>\n\n\n\n\n                {alphaSort(items, sortKey).map((e, i) => (\n                    <div\n                        className='details'\n                        onClick={(evt) => handleUpdate(evt, e.id, i)}\n                        style={selected === i ? { background: '#f9c3c3' } : {}}>\n                        <p>{new Date(e.fields.date).toDateString()}</p>\n                        <p>{e.fields.vendor}</p>\n                        <p>{e.fields.name}</p>\n                        <p>{e.fields.amount}</p>\n                        <p>{e.fields.purchaser}</p>\n\n                        <div className='cats'>{categories.filter(el => e.fields.categories.includes(el.id)).map(f => <p>{f.fields.name}</p>)}</div>\n                        <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                    </div>\n                ))}\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}