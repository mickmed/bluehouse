{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { getCategories, getItems } from './services/items';\nimport { createItem } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState('');\n  const [amount, setAmount] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [itemCategories, setItemCategories] = useState([]);\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    createItem({\n      [item]: Object.keys(checked).filter(e => checked[e])\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: item,\n        onChange: e => setItem(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: \"amount\",\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), categories.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          index: i,\n          className: \"category\",\n          name: e.fields.Name,\n          id: e.id,\n          type: \"checkbox\",\n          checked: checked[e.id] || false,\n          onChange: e => setChecked({ ...checked,\n            [e.target.id]: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e.fields.Name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: e.fields.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"n9KnU/xLky8CyO+KajTwvjeMwWc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["useEffect","useState","getCategories","getItems","createItem","Home","item","setItem","amount","setAmount","categories","setCategories","checked","setChecked","itemCategories","setItemCategories","getAllCategories","then","res","status","data","records","catch","console","error","setItems","items","handleSubmit","e","preventDefault","Object","keys","filter","target","value","map","i","fields","Name","id"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react'\nimport { getCategories, getItems } from './services/items'\nimport { createItem } from './services/items'\n\n\nconst Home = () => {\n\n    const [item, setItem] = useState('')\n    const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [itemCategories, setItemCategories] = useState([])\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n\n\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n\n        }\n        getAllCategories();\n\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        createItem({ [item]: Object.keys(checked).filter(e => checked[e]) })\n\n    }\n\n\n\n    return (\n        <div>\n            {/* <div className='list'>\n                {categories.map((e, i) => (\n                    <div key={i}>\n                    {e.id}\n                </div>\n                ))}\n            </div> */}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    value={item}\n                    onChange={e => setItem(e.target.value)}\n\n                />\n                <input\n                    type='number'\n                    value='amount'\n                    onChange={e => setAmount(e.target.value)}\n                />\n                {categories.map((e, i) => (\n                    <div key={i}>\n                        <input\n                            index={i}\n                            className='category'\n                            name={e.fields.Name}\n                            id={e.id}\n                            type='checkbox'\n                            checked={checked[e.id] || false}\n                            onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                        />\n                        <div key={i}>\n                            {e.fields.Name}\n                        </div>\n                    </div>\n\n                ))}\n                <input\n                    type='submit'\n                    value='submit'\n                />\n            </form>\n\n            {items.map((e, i) => (\n                <div>{e.fields.Name}</div>\n            ))}\n\n        </div>\n\n\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}