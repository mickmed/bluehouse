{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport e from 'cors';\nimport { useEffect, useState } from 'react';\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({}); // const [amount, setAmount] = useState('')\n\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState({});\n  const [selected, setSelected] = useState();\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value, e.target.type, e.target.checked);\n    let key, value;\n\n    if (e.target.type === 'checkbox') {\n      if (editMode) {\n        if ('categories' in currentItem.fields) {\n          if (e.target.checked) {\n            currentItem.fields.categories.push(e.target.id);\n          } else {\n            console.log('false');\n            const index = currentItem.fields.categories.indexOf(e.target.id);\n            currentItem.fields.categories.splice(index, 1);\n          }\n        } else {\n          currentItem.fields.categories = [e.target.id];\n        }\n\n        console.log(currentItem);\n      } else {\n        console.log('not edit');\n\n        if ('categories' in item) {\n          console.log('remove nw');\n          e.target.checked ? item.categories.push(e.target.id) : delete item.categories[item.categories.indexOf(e.target.id)];\n        } else {\n          console.log('new');\n          item.categories = [e.target.id];\n        }\n\n        console.log(item);\n      }\n    } else {\n      key = e.target.name;\n      value = e.target.value;\n    }\n\n    editMode ? setCurrentItem({ ...currentItem,\n      fields: { ...currentItem.fields,\n        [key]: value\n      }\n    }) : setItem({ ...item,\n      [key]: value\n    });\n  };\n\n  const handleUpdate = async (e, id, i) => {\n    const current = await getItemById(id);\n    setCurrentItem(current);\n    setSelected(i);\n    setEditMode(true);\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n    const {\n      name,\n      amount,\n      vendor,\n      categories,\n      date,\n      purchaser\n    } = editMode ? currentItem.fields : item;\n    console.log(categories);\n    const newItem = {\n      name: name,\n      amount: parseInt(amount),\n      vendor: vendor,\n      categories: categories,\n      date: date,\n      purchaser: purchaser\n    };\n    console.log(newItem);\n\n    if (editMode) {\n      const updatedItem = await updateItem(newItem, id);\n      const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)];\n      setItems(newItems);\n      setEditMode(false);\n    } else {\n      const postedItem = await createItem(newItem);\n      setItems([...items, ...postedItem.records]);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    deleteItem(id);\n    console.log(...items.filter(el => el.id !== id));\n    let blah = [...items].filter(el => el.id !== id);\n    console.log(blah);\n    setItems(blah);\n  };\n\n  const compare = (a, b) => {\n    if (a.fields.Name < b.fields.Name) {\n      return -1;\n    }\n\n    if (a.fields.Name > b.fields.Name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  const {\n    date,\n    vendor,\n    name,\n    amount,\n    purchaser\n  } = editMode ? currentItem.fields || '' : item;\n  const cats = editMode ? currentItem.fields.categories || [] : item.categories || []; // console.log(cats)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: editMode ? {\n        background: '#f9c3c3'\n      } : {},\n      onSubmit: e => handleSubmit(e, editMode ? currentItem.id : null),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.date,\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        name: \"date\",\n        id: item.date,\n        type: \"date\",\n        value: date || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.vendor,\n        children: \"Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"vendor\",\n        name: \"vendor\",\n        id: item.vendor,\n        type: \"text\",\n        value: vendor || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.name,\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        id: item.name,\n        type: \"text\",\n        value: name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.amount,\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount\",\n        name: \"amount\",\n        id: item.amount,\n        type: \"number\",\n        value: amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Lyssie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Lyssie',\n          onChange: handleChange,\n          checked: purchaser === 'Lyssie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Marca',\n          onChange: handleChange,\n          checked: purchaser === 'Marca'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: categories && categories.sort(compare).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            className: \"category\",\n            name: e.fields.name,\n            id: e.id,\n            type: \"checkbox\",\n            checked: cats.includes(e.id) || false // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: e.id,\n            children: e.fields.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        onClick: evt => handleUpdate(evt, e.id, i),\n        style: selected === i ? {\n          background: '#f9c3c3'\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(e.fields.date).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.purchaser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: evt => handleDelete(evt, e.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"tNubXmMSqkhSYYBI6+HYqV07m5Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["e","useEffect","useState","getItemById","createItem","updateItem","deleteItem","getItems","getCategories","Home","item","setItem","categories","setCategories","checked","setChecked","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","selected","setSelected","getAllCategories","then","res","status","data","records","catch","console","error","handleChange","log","target","name","value","type","key","fields","push","id","index","indexOf","splice","handleUpdate","i","current","handleSubmit","preventDefault","amount","vendor","date","purchaser","newItem","parseInt","updatedItem","newItems","map","el","postedItem","handleDelete","filter","blah","compare","a","b","Name","cats","background","sort","includes","evt","Date","toDateString"],"mappings":"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","sourcesContent":["\nimport e from 'cors'\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n    const [selected, setSelected] = useState()\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories();\n\n    }, []);\n\n\n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value, e.target.type, e.target.checked)\nlet key, value\n        if (e.target.type === 'checkbox') {\n            \n            if (editMode) {\n\n                if ('categories' in currentItem.fields) {\n                    if (e.target.checked) {\n                        currentItem.fields.categories.push(e.target.id)\n                    } else {\n                        console.log('false')\n                        const index = currentItem.fields.categories.indexOf(e.target.id)\n                        currentItem.fields.categories.splice(index, 1)\n\n                    }\n\n\n                } else {\n                    currentItem.fields.categories = [e.target.id]\n                }\n\n                console.log(currentItem)\n\n            } else {\n                console.log('not edit')\n                if ('categories' in item) {\n                    console.log('remove nw')\n                    e.target.checked ? item.categories.push(e.target.id) :\n                        delete item.categories[item.categories.indexOf(e.target.id)]\n\n                } else {\n                    console.log('new')\n                    item.categories = [e.target.id]\n                }\n\n                console.log(item)\n            }\n\n\n\n\n        } else {\n            key = e.target.name\n            value = e.target.value\n        }\n        editMode ?\n            setCurrentItem({ ...currentItem, fields: { ...currentItem.fields, [key]: value } }) :\n            setItem({ ...item, [key]: value })\n    }\n\n\n    const handleUpdate = async (e, id, i) => {\n        const current = await getItemById(id)\n        setCurrentItem(current)\n        setSelected(i)\n\n        setEditMode(true)\n\n    }\n\n\n\n    const handleSubmit = async (e, id) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem.fields : item\n        console.log(categories)\n        const newItem = {\n            name: name,\n            amount: parseInt(amount),\n            vendor: vendor,\n            categories: categories,\n            date: date,\n            purchaser: purchaser\n        }\n        console.log(newItem)\n        if (editMode) {\n            const updatedItem = await updateItem(newItem, id)\n            const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)]\n            setItems(newItems)\n            setEditMode(false)\n        } else {\n            const postedItem = await createItem(newItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n\n\n\n\n\n    }\n\n\n\n    const handleDelete = (e, id) => {\n\n        e.preventDefault()\n        console.log(id)\n        deleteItem(id)\n        console.log(...items.filter(el => el.id !== id))\n        let blah = [...items].filter(el => el.id !== id)\n        console.log(blah)\n        setItems(blah)\n    }\n\n    const compare = (a, b) => {\n        if (a.fields.Name < b.fields.Name) {\n            return -1;\n        }\n        if (a.fields.Name > b.fields.Name) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const { date, vendor, name, amount, purchaser } = editMode ? currentItem.fields || '' : item\n    const cats = editMode ? currentItem.fields.categories || [] : item.categories || []\n    // console.log(cats)\n    return (\n        <div className='home'>\n\n            <form style={editMode ? { background: '#f9c3c3' } : {}} onSubmit={(e) => handleSubmit(e, editMode ? currentItem.id : null)}>\n                <label for={item.date}>Date</label>\n                <input\n                    className='date'\n                    name='date'\n                    id={item.date}\n                    type='date'\n                    value={date || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.vendor}>Vendor</label>\n                <input\n                    className='vendor'\n                    name='vendor'\n                    id={item.vendor}\n                    type='text'\n                    value={vendor || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.name}>Item</label>\n                <input\n                    className='name'\n                    name='name'\n                    id={item.name}\n                    type='text'\n                    value={name || ''}\n                    onChange={handleChange}\n\n                />\n                <label for={item.amount}>Amount</label>\n                <input\n                    className='amount'\n                    name='amount'\n                    id={item.amount}\n                    type='number'\n                    value={amount || ''}\n                    onChange={handleChange}\n                />\n                <div>\n                    <label for={item.purchaser}>Lyssie</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Lyssie'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Lyssie'}\n\n                    />\n                </div>\n                <div>\n                    <label for={item.purchaser}>Marca</label>\n                    <input\n                        className='purchaser'\n                        name='purchaser'\n                        id={item.purchaser}\n                        type='radio'\n                        value={'Marca'}\n                        onChange={handleChange}\n                        checked={purchaser === 'Marca'}\n\n                    />\n                </div>\n                <div className='categories'>\n                    {categories && categories.sort(compare).map((e, i) => (\n                        <div key={i} className='category'>\n                            {/* {console.log(cats.includes(e.fields.name))}\n                            {console.log('e', e.fields.name)} */}\n                            {/* {console.log('here', cats.map(e=>Object.keys(e).toString() === e.fields.name))} */}\n                            <input\n                                index={i}\n                                className='category'\n                                name={e.fields.name}\n                                id={e.id}\n                                type='checkbox'\n                                checked={cats.includes(e.id) || false}\n                                // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                                onChange={handleChange}\n                            />\n                            <label key={i} for={e.id}>{e.fields.name}</label>\n\n                        </div>\n\n                    ))}\n                </div>\n                <input\n                    type='submit'\n                    value='submit'\n                />\n            </form>\n            <div className='content'>\n\n\n                {items.map((e, i) => (\n                    <div\n                        className='details'\n                        onClick={(evt) => handleUpdate(evt, e.id, i)}\n                        style={selected === i ? { background: '#f9c3c3' } : {}}>\n                        <p>{new Date(e.fields.date).toDateString()}</p>\n                        <p>{e.fields.vendor}</p>\n                        <p>{e.fields.name}</p>\n                        <p>{e.fields.amount}</p>\n                        <p>{e.fields.purchaser}</p>\n                        <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                    </div>\n                ))}\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}