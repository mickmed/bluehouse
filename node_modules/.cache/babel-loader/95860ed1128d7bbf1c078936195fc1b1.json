{"ast":null,"code":"var _jsxFileName = \"/home/mick/apps/bluehouse/client/src/Components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport e from 'cors';\nimport { useEffect, useState } from 'react';\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [item, setItem] = useState({}); // const [amount, setAmount] = useState('')\n\n  const [categories, setCategories] = useState([]);\n  const [checked, setChecked] = useState({});\n  const [items, setItems] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState({});\n  const [selected, setSelected] = useState();\n  useEffect(() => {\n    const getAllCategories = async () => {\n      await getCategories().then(res => res.status === 200 ? setCategories([...categories, ...res.data.records]) : null).catch(console.error);\n      await getItems().then(res => res.status === 200 ? setItems([...items, ...res.data.records]) : null).catch(console.error);\n    };\n\n    getAllCategories();\n  }, []);\n\n  const handleChange = e => {\n    console.log(e.target.name, e.target.value, e.target.type, e.target.checked);\n    let key, value;\n\n    if (e.target.type === 'checkbox') {\n      key = 'categories';\n      value = {\n        [e.target.name]: e.target.checked\n      };\n    } else {\n      key = e.target.name;\n      value = e.target.value;\n    }\n\n    editMode ? setCurrentItem({ ...currentItem,\n      fields: { ...currentItem.fields,\n        [key]: value\n      }\n    }) : setItem({ ...item,\n      [key]: value\n    });\n  };\n\n  const handleUpdate = async (e, id, i) => {\n    const current = await getItemById(id);\n    setCurrentItem(current);\n    setSelected(i);\n    setEditMode(true);\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n    const {\n      name,\n      amount,\n      vendor,\n      categories,\n      date,\n      purchaser\n    } = editMode ? currentItem.fields : item;\n    const newItem = {\n      name: name,\n      amount: parseInt(amount),\n      vendor: vendor,\n      categories: Object.keys(checked).filter(e => checked[e]),\n      date: date,\n      purchaser: purchaser\n    };\n\n    if (editMode) {\n      const updatedItem = await updateItem(newItem, id);\n      const newItems = [...items.map((el, i) => el.id === id ? updatedItem[0] : el)];\n      setItems(newItems);\n      setEditMode(false);\n    } else {\n      const postedItem = await createItem(newItem);\n      setItems([...items, ...postedItem.records]);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    console.log(id);\n    deleteItem(id);\n    console.log(...items.filter(el => el.id !== id));\n    let blah = [...items].filter(el => el.id !== id);\n    console.log(blah);\n    setItems(blah);\n  };\n\n  const compare = (a, b) => {\n    if (a.fields.Name < b.fields.Name) {\n      return -1;\n    }\n\n    if (a.fields.Name > b.fields.Name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  const {\n    date,\n    vendor,\n    name,\n    amount,\n    purchaser,\n    categories1\n  } = editMode ? currentItem.fields || '' : item;\n  const cats = editMode ? currentItem.fields.categories || false : item.categories || false;\n  console.log(cats);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: editMode ? {\n        background: '#f9c3c3'\n      } : {},\n      onSubmit: e => handleSubmit(e, editMode ? currentItem.id : null),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.date,\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date\",\n        name: \"date\",\n        id: item.date,\n        type: \"date\",\n        value: date || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.vendor,\n        children: \"Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"vendor\",\n        name: \"vendor\",\n        id: item.vendor,\n        type: \"text\",\n        value: vendor || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.name,\n        children: \"Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        id: item.name,\n        type: \"text\",\n        value: name || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: item.amount,\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount\",\n        name: \"amount\",\n        id: item.amount,\n        type: \"number\",\n        value: amount || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Lyssie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Lyssie',\n          onChange: handleChange,\n          checked: purchaser === 'Lyssie'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: item.purchaser,\n          children: \"Marca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"purchaser\",\n          name: \"purchaser\",\n          id: item.purchaser,\n          type: \"radio\",\n          value: 'Marca',\n          onChange: handleChange,\n          checked: purchaser === 'Marca'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), console.log(e.id), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: categories.sort(compare).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            index: i,\n            className: \"category\",\n            name: e.fields.name,\n            id: e.id,\n            type: \"checkbox\",\n            checked: cats[e.id] || false // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n            ,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: e.id,\n            children: e.fields.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: items.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        onClick: evt => handleUpdate(evt, e.id, i),\n        style: selected === i ? {\n          background: '#f9c3c3'\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(e.fields.date).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.vendor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.fields.purchaser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: evt => handleDelete(evt, e.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"tNubXmMSqkhSYYBI6+HYqV07m5Y=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mick/apps/bluehouse/client/src/Components/Home.jsx"],"names":["e","useEffect","useState","getItemById","createItem","updateItem","deleteItem","getItems","getCategories","Home","item","setItem","categories","setCategories","checked","setChecked","items","setItems","editMode","setEditMode","currentItem","setCurrentItem","selected","setSelected","getAllCategories","then","res","status","data","records","catch","console","error","handleChange","log","target","name","value","type","key","fields","handleUpdate","id","i","current","handleSubmit","preventDefault","amount","vendor","date","purchaser","newItem","parseInt","Object","keys","filter","updatedItem","newItems","map","el","postedItem","handleDelete","blah","compare","a","b","Name","categories1","cats","background","sort","evt","Date","toDateString"],"mappings":"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","sourcesContent":["\nimport e from 'cors'\nimport { useEffect, useState } from 'react'\nimport { getItemById, createItem, updateItem, deleteItem, getItems, getCategories } from './services/items'\n\nconst Home = () => {\n    const [item, setItem] = useState({})\n    // const [amount, setAmount] = useState('')\n    const [categories, setCategories] = useState([])\n    const [checked, setChecked] = useState({})\n    const [items, setItems] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [currentItem, setCurrentItem] = useState({})\n    const [selected, setSelected] = useState()\n\n    useEffect(() => {\n        const getAllCategories = async () => {\n            await getCategories()\n                .then(res =>\n                    res.status === 200\n                        ? setCategories([...categories, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n            await getItems()\n                .then(res =>\n                    res.status === 200\n                        ? setItems([...items, ...res.data.records])\n                        : null\n                )\n                .catch(console.error)\n        }\n        getAllCategories();\n\n    }, []);\n\n\n\n    const handleChange = (e) => {\n        console.log(e.target.name, e.target.value, e.target.type, e.target.checked)\n        let key, value\n        if(e.target.type === 'checkbox'){\n            key = 'categories'\n            value = {[e.target.name]: e.target.checked}\n\n        }else{\n            key = e.target.name\n            value = e.target.value\n        }\n        editMode ?\n            setCurrentItem({ ...currentItem, fields: {...currentItem.fields, [key]: value }}) :\n            setItem({ ...item, [key]: value })\n    }\n\n\n    const handleUpdate = async (e, id, i) => {\n        const current = await getItemById(id)\n        setCurrentItem(current)\n        setSelected(i)\n    \n        setEditMode(true)\n    \n    }\n\n\n\n    const handleSubmit = async (e, id) => {\n        e.preventDefault()\n        const { name, amount, vendor, categories, date, purchaser } = editMode ? currentItem.fields: item\n        const newItem = {\n            name: name,\n            amount: parseInt(amount),\n            vendor: vendor,\n            categories: Object.keys(checked).filter(e => checked[e]),\n            date: date,\n            purchaser: purchaser\n        }\n        if (editMode) {\n            const updatedItem = await updateItem(newItem, id)\n            const newItems = [...items.map((el,i)=> el.id === id ? updatedItem[0] : el)]\n            setItems(newItems)\n            setEditMode(false)\n        } else {\n            const postedItem = await createItem(newItem)\n            setItems([...items, ...postedItem.records])\n\n        }\n\n\n\n        \n        \n    }\n\n\n\nconst handleDelete = (e, id) => {\n\n    e.preventDefault()\n    console.log(id)\n    deleteItem(id)\n    console.log(...items.filter(el => el.id !== id))\n    let blah = [...items].filter(el => el.id !== id)\n    console.log(blah)\n    setItems(blah)\n}\n\nconst compare = (a, b) => {\n    if (a.fields.Name < b.fields.Name) {\n        return -1;\n    }\n    if (a.fields.Name > b.fields.Name) {\n        return 1;\n    }\n    return 0;\n}\n\nconst { date, vendor, name, amount, purchaser, categories1} = editMode ? currentItem.fields || '': item\nconst cats = editMode ? currentItem.fields.categories || false : item.categories || false\nconsole.log(cats)\nreturn (\n    <div className='home'>\n\n        <form style={editMode ? {background: '#f9c3c3'}:{}}onSubmit={(e)=>handleSubmit(e, editMode ? currentItem.id : null)}>\n            <label for={item.date}>Date</label>\n            <input\n                className='date'\n                name='date'\n                id={item.date}\n                type='date'\n                value={date || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.vendor}>Vendor</label>\n            <input\n                className='vendor'\n                name='vendor'\n                id={item.vendor}\n                type='text'\n                value={vendor || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.name}>Item</label>\n            <input\n                className='name'\n                name='name'\n                id={item.name}\n                type='text'\n                value={name || ''}\n                onChange={handleChange}\n\n            />\n            <label for={item.amount}>Amount</label>\n            <input\n                className='amount'\n                name='amount'\n                id={item.amount}\n                type='number'\n                value={amount || ''}\n                onChange={handleChange}\n            />\n            <div>\n                <label for={item.purchaser}>Lyssie</label>\n                <input\n                    className='purchaser'\n                    name='purchaser'\n                    id={item.purchaser}\n                    type='radio'\n                    value={'Lyssie'}\n                    onChange={handleChange}\n                    checked={purchaser === 'Lyssie'}\n\n                />\n            </div>\n            <div>\n                <label for={item.purchaser}>Marca</label>\n                <input\n                    className='purchaser'\n                    name='purchaser'\n                    id={item.purchaser}\n                    type='radio'\n                    value={'Marca'}\n                    onChange={handleChange}\n                    checked={purchaser === 'Marca'}\n\n                />\n            </div>\n            {console.log(e.id)}\n            <div className='categories'>\n                {categories.sort(compare).map((e, i) => (\n                    <div key={i} className='category'>\n                        <input\n                            index={i}\n                            className='category'\n                            name={e.fields.name}\n                            id={e.id}\n                            type='checkbox'\n                            checked={cats[e.id] || false}\n                            // onChange={e => setChecked({ ...checked, [e.target.id]: e.target.checked })}\n                            onChange={handleChange}\n                        />\n                        <label key={i} for={e.id}>{e.fields.name}</label>\n\n                    </div>\n\n                ))}\n            </div>\n            <input\n                type='submit'\n                value='submit'\n            />\n        </form>\n        <div className='content'>\n\n\n            {items.map((e, i) => (\n                <div \n                    className='details' \n                    onClick={(evt) => handleUpdate(evt, e.id, i)}\n                    style={selected === i ? {background: '#f9c3c3'} : {}}>\n                    <p>{new Date(e.fields.date).toDateString()}</p>\n                    <p>{e.fields.vendor}</p>\n                    <p>{e.fields.name}</p>\n                    <p>{e.fields.amount}</p>\n                    <p>{e.fields.purchaser}</p>\n                    <p onClick={(evt) => handleDelete(evt, e.id)}>X</p>\n\n                </div>\n            ))}\n\n        </div>\n    </div>\n\n)\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}